<%- include('../partials/header') %>
<%- include('../partials/navbar') %>

<div class="mb-3">
  <input type="text" id="searchInput" class="form-control" placeholder="üîç Search events..." oninput="resetAndLoadEvents()">
</div>

<div class="container py-4">
  <h2 class="mb-4 fw-bold text-success text-center">üìÖ Events & News</h2>

  <div class="row g-4" id="event-container">
    <!-- Events will be appended here dynamically -->
  </div>

  <div id="loading" class="text-center my-4" style="display: none;">
    <div class="spinner-border text-success" role="status"></div>
    <p class="text-muted mt-2">Loading more events...</p>
  </div>

  <div id="end-message" class="text-center text-muted mt-3" style="display: none;">
    <i class="bi bi-check-circle"></i> You‚Äôve reached the end.
  </div>
</div>

<!-- üßπ Delete Modal -->
<div class="modal fade" id="deleteEventModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <form id="deleteForm" method="POST">
        <div class="modal-header">
          <h5 class="modal-title text-danger">Confirm Delete</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>

        <div class="modal-body">
          <p>Are you sure you want to delete this event?</p>
        </div>

        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="submit" class="btn btn-danger">
            <span id="deleteSpinner" class="spinner-border spinner-border-sm me-1 d-none" role="status" aria-hidden="true"></span>
            Delete
          </button>
        </div>
      </form>
    </div>
  </div>
</div>

<%- include('../partials/footer') %>

<script>
  const deleteForm = document.getElementById('deleteForm');
  const deleteSpinner = document.getElementById('deleteSpinner');

  function openDeleteModal(eventId) {
    deleteForm.action = `/events/${eventId}/delete`;
    deleteSpinner.classList.add('d-none'); // Ensure spinner is hidden when modal opens
    const modal = new bootstrap.Modal(document.getElementById('deleteEventModal'));
    modal.show();
  }

  deleteForm.addEventListener('submit', function () {
    deleteSpinner.classList.remove('d-none'); // Show spinner only when confirmed
  });
</script>

<script>
  let currentPage = 1;
  let isLoading = false;
  let hasMore = true;
  let currentSearch = '';

  const loggedInUserRoles = <%- JSON.stringify(user?.roles || []) %>;
  const container = document.getElementById('event-container');
  const loading = document.getElementById('loading');
  const endMsg = document.getElementById('end-message');
  const searchInput = document.getElementById('searchInput');

  async function loadMoreEvents() {
    if (isLoading || !hasMore) return;
    isLoading = true;
    loading.style.display = 'block';

    try {
      const res = await fetch(`/api/events?page=${currentPage}&search=${encodeURIComponent(currentSearch)}`);
      const data = await res.json();

      data.events.forEach(event => {
        const card = document.createElement('div');
        card.className = 'col-6 col-sm-6 col-md-4';
        
        let buttonsHTML = `
          <a href="/events/${event._id}" class="btn btn-sm btn-outline-success">üìñ Read More</a>
        `;

        if (loggedInUserRoles.includes('Admin')) {
          buttonsHTML += `
            <a href="/events/${event._id}/edit" class="btn btn-sm btn-outline-primary ms-1">‚úèÔ∏è Edit</a>
            <button onclick="openDeleteModal('${event._id}')" class="btn btn-sm btn-outline-danger ms-1">üóëÔ∏è Delete</button>
          `;
        }

        card.innerHTML = `
          <div class="card shadow-sm h-100">
           <img src="${event.imageUrls && event.imageUrls.length > 0 ? event.imageUrls[0] : '/default-image.jpg'}" class="card-img-top" style="height: 160px; object-fit: cover;">
            <div class="card-body p-3">
              <h5 class="card-title text-primary mb-1">${event.title}</h5>
              <small class="text-muted d-block mb-2">
                <i class="bi bi-calendar-event"></i> ${new Date(event.date).toDateString()}
              </small>
              <p class="card-text mb-3" style="font-size: 0.95rem;">
                ${event.description.length > 100 ? event.description.substring(0, 100) + '...' : event.description}
              </p>
              <div class="d-flex flex-wrap gap-1">
                ${buttonsHTML}
              </div>
            </div>
          </div>
        `;

        container.appendChild(card);
      });

      currentPage++;
      hasMore = data.hasMore;

      if (!hasMore) endMsg.style.display = 'block';
    } catch (err) {
      console.error('Load error:', err);
    } finally {
      isLoading = false;
      loading.style.display = 'none';
    }
  }

  // Auto-load on scroll
  window.addEventListener('scroll', () => {
    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight - 100) {
      loadMoreEvents();
    }
  });

  // Reset + Search
  function resetAndLoadEvents() {
    currentSearch = searchInput.value.trim();
    currentPage = 1;
    hasMore = true;
    container.innerHTML = '';
    endMsg.style.display = 'none';
    loadMoreEvents();
  }

  // Initial load
  document.addEventListener('DOMContentLoaded', () => {
    loadMoreEvents();
  });
</script>
