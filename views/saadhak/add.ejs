<%- include('../partials/header') %>
<%- include('../partials/navbar') %>

<section class="container mt-4">
  <h4 class="mb-3 fw-bold text-primary">➕ Register New Saadhak</h4>

  <% if (error) { %>
    <div class="alert alert-danger"><%= error %></div>
  <% } %>

  <% if (success) { %>
    <div class="alert alert-success"><%= success %></div>
  <% } %>

  <form action="/saadhak/add" method="POST" class="row g-3" onsubmit="cleanMobileNumberById('mobile')">
    <!-- Role --> 
    <div class="col-md-4">
      <label class="form-label">Select Role *</label>
      <select name="role" class="form-select" id="roleSelect" required>
        <option value="">-- Select --</option>
        <% allowedRoles.forEach(r => { %>
          <option value="<%= r %>" <%= formData?.role === r ? 'selected' : '' %>><%= r %></option>
        <% }) %>
      </select>
    </div>

    <!-- Name -->
    <div class="col-md-4">
      <label class="form-label">Full Name *</label>
      <input type="text" name="name" class="form-control" required value="<%= formData?.name || '' %>">
    </div>

 <!-- Mobile -->
<div class="col-md-4">
  <label class="form-label">Mobile *  <span id="mobileCount" style="color: red; font-weight: bold; margin-bottom: 4px;">0 digits</span></label>
 
  <input type="text" name="mobile" id="mobile" class="form-control" required value="<%= formData?.mobile || '' %>">
</div>

    <% const selectedPrant = formData?.prant || user.prant; %>
    <% const selectedZila = formData?.zila || user.zila; %>
    <% const selectedKsheterId = formData?.ksheter || user.ksheter; %>
    <% const selectedKenderId = formData?.kender || user.kender; %>
    
    <!-- Prant -->
    <div class="col-md-4 prant-field d-none">
      <label class="form-label">Prant</label>
      <select name="prant" id="prantSelect" class="form-select" <%= user.prant ? 'disabled' : '' %>>
        <option value="">-- Select Prant --</option>
        <% prants.forEach(p => { %>
          <option value="<%= p._id %>" <%= (selectedPrant == p._id.toString()) ? 'selected' : '' %>>
            <%= p.name %>
          </option>
        <% }) %>
      </select>
      <% if (user.prant) { %>
        <input type="hidden" name="prant" value="<%= user.prant %>">
      <% } %>
    </div>

    <!-- Zila -->
    <div class="col-md-4 zila-field d-none">
      <label class="form-label">Zila</label>
      <select name="zila" id="zilaSelect" class="form-select" <%= user.zila ? 'disabled' : '' %>>
        <option value="">-- Select Zila --</option>
        <% zilas.forEach(z => { %>
          <% if (z.prant.toString() === selectedPrant?.toString()) { %>
            <option value="<%= z._id %>" <%= (selectedZila == z._id.toString()) ? 'selected' : '' %>>
              <%= z.name %>
            </option>
          <% } %>
        <% }) %>
      </select>
      <% if (user.zila) { %>
        <input type="hidden" name="zila" value="<%= user.zila %>">
      <% } %>
    </div>

    <!-- Ksheter -->
    <div class="col-md-4 ksheter-field d-none">
      <label class="form-label">Ksheter</label>
      <select name="ksheter" id="ksheterSelect" class="form-select" <%= user.ksheter ? 'disabled' : '' %>>
        <option value="">-- Select Ksheter --</option>
        <% ksheters.forEach(k => { %>
          <% if (k.zila.toString() === selectedZila?.toString()) { %>
            <option value="<%= k._id %>" <%= (selectedKsheterId == k._id.toString()) ? 'selected' : '' %>>
              <%= k.name %>
            </option>
          <% } %>
        <% }) %>
      </select>
      <% if (user.ksheter) { %>
        <input type="hidden" name="ksheter" value="<%= user.ksheter %>">
      <% } %>
    </div>

    <!-- Kender -->
    <div class="col-md-4 kender-field d-none">
      <label class="form-label">Kender</label>
      <select name="kender" id="kenderSelect" class="form-select" <%= user.kender ? 'disabled' : '' %>>
        <option value="">-- Select Kender --</option>
        <% kenders.forEach(k => { %>
          <% if (k.ksheter.toString() === selectedKsheterId?.toString()) { %>
            <option value="<%= k._id %>" <%= (selectedKenderId == k._id.toString()) ? 'selected' : '' %>>
              <%= k.name %>
            </option>
          <% } %>
        <% }) %>
      </select>
      <% if (user.kender) { %>
        <input type="hidden" name="kender" value="<%= user.kender %>">
      <% } %>
    </div>

    <!-- DOB -->
    <div class="col-md-4">
      <label class="form-label">DOB</label>
      <input type="date" name="dob" class="form-control" value="<%= formData?.dob || '' %>">
    </div>

    <!-- Gender -->
    <div class="col-md-4">
      <label class="form-label">Gender</label>
      <select name="gender" class="form-select">
        <option value="">--</option>
        <option value="Male" <%= formData.gender === 'Male' ? 'selected' : '' %>>Male</option>
        <option value="Female" <%= formData.gender === 'Female' ? 'selected' : '' %>>Female</option>
      </select>
    </div>

    <!-- Marital Status -->
    <div class="col-md-4">
      <label class="form-label">Marital Status</label>
      <select name="maritalStatus" class="form-select">
        <option value="">--</option>
        <option value="Married" <%= formData.maritalStatus === 'Married' ? 'selected' : '' %>>Married</option>
        <option value="Unmarried" <%= formData.maritalStatus === 'Unmarried' ? 'selected' : '' %>>Unmarried</option>
      </select>
    </div>

    <!-- Marriage Date -->
    <div class="col-md-4">
      <label class="form-label">Marriage Date</label>
      <input type="date" name="marriageDate" class="form-control" value="<%= formData?.marriageDate || '' %>">
    </div>

    <!-- Address -->
    <div class="col-md-6">
      <label class="form-label">Address</label>
      <input type="text" name="address" class="form-control" value="<%= formData?.address || '' %>">
    </div>

    <!-- Living Area -->
    <div class="col-md-6">
      <label class="form-label">Living Area</label>
      <input type="text" name="livingArea" class="form-control" value="<%= formData?.livingArea || '' %>">
    </div>

    <div class="col-12 text-end">
      <button class="btn btn-primary">✅ Register Saadhak</button>
    </div>
  </form>
</section>

<script>
  const allZilas = <%- JSON.stringify(zilas.map(z => ({ _id: z._id.toString(), name: z.name, prant: z.prant?.toString() }))) %>;
  const allKsheters = <%- JSON.stringify(ksheters.map(k => ({ _id: k._id.toString(), name: k.name, zila: k.zila.toString() }))) %>;
  const allKenders = <%- JSON.stringify(kenders.map(k => ({ _id: k._id.toString(), name: k.name, ksheter: k.ksheter.toString() }))) %>;
  const roleConfig = <%- JSON.stringify(roleConfig) %>;
</script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
    const roleSelect = document.getElementById('roleSelect');
    const prantField = document.querySelector('.prant-field');
    const zilaField = document.querySelector('.zila-field');
    const ksheterField = document.querySelector('.ksheter-field');
    const kenderField = document.querySelector('.kender-field');

    const prantSelect = document.getElementById('prantSelect');
    const zilaSelect = document.getElementById('zilaSelect');
    const ksheterSelect = document.getElementById('ksheterSelect');
    const kenderSelect = document.getElementById('kenderSelect');

    const mobileInput = document.getElementById('mobile');
    const mobileCount = document.getElementById('mobileCount');

    const roleHierarchyMap = {
      adminRoles: [],
      prantRoles: ['prant'],
      zilaRoles: ['prant', 'zila'],
      ksheterRoles: ['prant', 'zila', 'ksheter'],
      kenderRoles: ['prant', 'zila', 'ksheter', 'kender'],
      kenderTeamRoles: ['prant', 'zila', 'ksheter', 'kender'],
      saadhakRoles: ['prant', 'zila', 'ksheter', 'kender'],
    };

    function getFieldVisibilityForRole(role) {
      for (const [group, roles] of Object.entries(roleConfig)) {
        if (Array.isArray(roles) && roles.includes(role)) {
          return roleHierarchyMap[group] || [];
        }
      }
      return [];
    }

    function toggleFields(role) {
      const visibleFields = getFieldVisibilityForRole(role || '');
      const allFields = { prant: prantField, zila: zilaField, ksheter: ksheterField, kender: kenderField };

      for (const [field, el] of Object.entries(allFields)) {
        el.classList.toggle('d-none', !visibleFields.includes(field));
      }
    }

    function updateDigitCount() {
      const digits = mobileInput.value.replace(/\D/g, '').length;
      mobileCount.textContent = `${digits} digit${digits !== 1 ? 's' : ''}`;
    }

    function cleanAndLimitTo10Digits(value) {
      let digitsOnly = value.replace(/\D/g, '');
      if (digitsOnly.length > 10) {
        digitsOnly = digitsOnly.slice(-10);
      }
      return digitsOnly;
    }

    mobileInput.addEventListener('input', () => {
      mobileInput.value = cleanAndLimitTo10Digits(mobileInput.value);
      updateDigitCount();
    });

    mobileInput.addEventListener('paste', (e) => {
      e.preventDefault();
      const pastedText = (e.clipboardData || window.clipboardData).getData('text');
      const cleaned = cleanAndLimitTo10Digits(pastedText);
      mobileInput.value = cleaned;
      updateDigitCount();
    });

    prantSelect?.addEventListener('change', function () {
      const prantId = this.value;
      const filteredZilas = allZilas.filter(z => z.prant === prantId);

      zilaSelect.removeAttribute('disabled');
      zilaSelect.innerHTML = '<option value="">-- Select Zila --</option>';
      filteredZilas.forEach(z => {
        zilaSelect.innerHTML += `<option value="${z._id}">${z.name}</option>`;
      });

      ksheterSelect.innerHTML = '<option value="">-- Select Ksheter --</option>';
      kenderSelect.innerHTML = '<option value="">-- Select Kender --</option>';

      <% if (user.zila) { %>
        zilaSelect.setAttribute('disabled', 'disabled');
      <% } %>
    });

    zilaSelect?.addEventListener('change', function () {
      const zilaId = this.value;
      const filteredKsheters = allKsheters.filter(k => k.zila === zilaId);
      ksheterSelect.innerHTML = '<option value="">-- Select Ksheter --</option>';
      filteredKsheters.forEach(k => {
        ksheterSelect.innerHTML += `<option value="${k._id}">${k.name}</option>`;
      });

      kenderSelect.innerHTML = '<option value="">-- Select Kender --</option>';
    });

    ksheterSelect?.addEventListener('change', function () {
      const ksheterId = this.value;
      const filteredKenders = allKenders.filter(k => k.ksheter === ksheterId);
      kenderSelect.innerHTML = '<option value="">-- Select Kender --</option>';
      filteredKenders.forEach(k => {
        kenderSelect.innerHTML += `<option value="${k._id}">${k.name}</option>`;
      });
    });

    // Run these AFTER DOM fully ready and after any prefilled value is set
    mobileInput.value = cleanAndLimitTo10Digits(mobileInput.value);
    updateDigitCount();

    // Small timeout ensures the select's value is fully loaded from server-rendered HTML
    setTimeout(() => {
      toggleFields(roleSelect.value);
    }, 10);

    roleSelect.addEventListener('change', () => toggleFields(roleSelect.value));
  });
</script>


<%- include('../partials/footer') %>
