<%- include('../partials/header') %>
<%- include('../partials/navbar') %>

<section class="container mt-4">
  <div class="d-flex justify-content-between align-items-center mb-3">
    <h4 class="fw-bold text-primary">üë• All Saadhaks</h4>
    <a href="/saadhak/add" class="btn btn-sm btn-success">‚ûï Add Saadhak</a>
  </div>

  <!-- üîç Filter + Search -->
  <div class="row mb-3">
    <div class="col-md-3">
      <label>Zila</label>
      <select id="zilaFilter" class="form-select">
        <option value="">All Zila</option>
        <% zilas.forEach(z => { %>
          <option value="<%= z._id %>"><%= z.name %></option>
        <% }) %>
      </select>
    </div>
    <div class="col-md-3">
      <label>Ksheter</label>
      <select id="ksheterFilter" class="form-select">
        <option value="">All Ksheter</option>
      </select>
    </div>
    <div class="col-md-3">
      <label>Kender</label>
      <select id="kenderFilter" class="form-select">
        <option value="">All Kender</option>
      </select>
    </div>
    <div class="col-md-3">
      <label>Search</label>
      <input type="text" id="searchInput" class="form-control" placeholder="Search Saadhak...">
    </div>
  </div>

  <!-- ‚úÖ Column Selection -->
  <div class="mb-3">
    <label class="form-label">üõ†Ô∏è Show Fields:</label><br>
    <label><input type="checkbox" id="toggleMobile" checked> Mobile</label>
    <label class="ms-3"><input type="checkbox" id="toggleRole" checked> Role</label>
    <label class="ms-3"><input type="checkbox" id="toggleZila" checked> Zila</label>
    <label class="ms-3"><input type="checkbox" id="toggleKsheter" checked> Ksheter</label>
    <label class="ms-3"><input type="checkbox" id="toggleKender" checked> Kender</label>
    <button id="resetBtn" class="btn btn-sm btn-outline-secondary float-end">üîÑ Reset</button>
  </div>

  <!-- ‚úÖ Table -->
  <div class="table-responsive">
    <table class="table table-bordered align-middle">
      <thead class="table-dark">
        <tr>
          <th>#</th>
          <th>Name</th>
          <th class="mobile-col">Mobile</th>
          <th class="role-col">Role</th>
          <th class="zila-col">Zila</th>
          <th class="ksheter-col">Ksheter</th>
          <th class="kender-col">Kender</th>
          <th class="text-end">Actions</th>
        </tr>
      </thead>
      <tbody id="saadhakTableBody"></tbody>
    </table>
  </div>
</section>

<script>
  const allSaadhaks = <%- JSON.stringify(saadhaks) %>;
  const allKsheters = <%- JSON.stringify(ksheters) %>;
  const allKenders = <%- JSON.stringify(kenders) %>;
  const user = <%- JSON.stringify(user) %>;

  document.addEventListener("DOMContentLoaded", function () {
    const zilaFilter = document.getElementById("zilaFilter");
    const ksheterFilter = document.getElementById("ksheterFilter");
    const kenderFilter = document.getElementById("kenderFilter");
    const searchInput = document.getElementById("searchInput");
    const resetBtn = document.getElementById("resetBtn");
    const tableBody = document.getElementById("saadhakTableBody");

    const checkboxFields = {
      mobile: document.getElementById("toggleMobile"),
      role: document.getElementById("toggleRole"),
      zila: document.getElementById("toggleZila"),
      ksheter: document.getElementById("toggleKsheter"),
      kender: document.getElementById("toggleKender")
    };

    // Populate dependent dropdowns
    function populateKsheter(zilaId) {
      ksheterFilter.innerHTML = '<option value="">All Ksheter</option>';
      const filtered = allKsheters.filter(k => k.zila === zilaId);
      filtered.forEach(k => {
        ksheterFilter.innerHTML += `<option value="${k._id}">${k.name}</option>`;
      });
    }

    function populateKender(ksheterId) {
      kenderFilter.innerHTML = '<option value="">All Kender</option>';
      const filtered = allKenders.filter(k => k.ksheter === ksheterId);
      filtered.forEach(k => {
        kenderFilter.innerHTML += `<option value="${k._id}">${k.name}</option>`;
      });
    }

    // Apply role-based restrictions on filters
    if (user.zila) {
      zilaFilter.value = user.zila;
      zilaFilter.disabled = true;
      populateKsheter(user.zila);
    }

    if (user.ksheter) {
      ksheterFilter.value = user.ksheter;
      ksheterFilter.disabled = true;
      populateKender(user.ksheter);
    }

    if (user.kender) {
      kenderFilter.value = user.kender;
      kenderFilter.disabled = true;
    }

    function renderTable() {
      const selectedZila = zilaFilter.value;
      const selectedKsheter = ksheterFilter.value;
      const selectedKender = kenderFilter.value;
      const searchTerm = searchInput.value.trim().toLowerCase();

      const filtered = allSaadhaks.filter(s => {
        const matchZila = !selectedZila || (s.zila && s.zila._id === selectedZila);
        const matchKsheter = !selectedKsheter || (s.ksheter && s.ksheter._id === selectedKsheter);
        const matchKender = !selectedKender || (s.kender && s.kender._id === selectedKender);

        const inSearch =
          s.name?.toLowerCase().includes(searchTerm) ||
          s.mobile?.includes(searchTerm) ||
          (Array.isArray(s.role) && s.role.join(',').toLowerCase().includes(searchTerm)) ||
          s.zila?.name?.toLowerCase().includes(searchTerm) ||
          s.ksheter?.name?.toLowerCase().includes(searchTerm) ||
          s.kender?.name?.toLowerCase().includes(searchTerm);

        return matchZila && matchKsheter && matchKender && inSearch;
      });

      tableBody.innerHTML = "";

      if (filtered.length === 0) {
        tableBody.innerHTML = '<tr><td colspan="8" class="text-center text-muted">No matching records found.</td></tr>';
        return;
      }

      filtered.forEach((s, index) => {
        const badgeColor = s.role?.includes('Admin') ? 'dark' :
                          s.role?.some(r => r.includes('Zila')) ? 'danger' :
                          s.role?.some(r => r.includes('Ksheter')) ? 'primary' :
                          s.role?.some(r => r.includes('Kender')) ? 'success' :
                          s.role?.includes('Shikshak') ? 'info' :
                          s.role?.includes('Karyakarta') ? 'warning' : 'secondary';

        const rolesHtml = Array.isArray(s.role)
          ? s.role.map(r => `<span class="badge bg-${badgeColor} me-1">${r}</span>`).join(' ')
          : '';

        tableBody.innerHTML += `
          <tr>
            <td>${index + 1}</td>
            <td><a href="/saadhak/edit/${s._id}" class="text-decoration-none fw-bold">${s.name}</a></td>
            <td class="mobile-col">${s.mobile || ''}</td>
            <td class="role-col">${rolesHtml}</td>
            <td class="zila-col">${s.zila?.name || '‚Äî'}</td>
            <td class="ksheter-col">${s.ksheter?.name || '‚Äî'}</td>
            <td class="kender-col">${s.kender?.name || '‚Äî'}</td>
            <td class="text-end">
              <a href="/saadhak/edit/${s._id}" class="btn btn-sm btn-outline-primary me-1">üñäÔ∏è</a>
              <button class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal${s._id}">üóëÔ∏è</button>
              <div class="modal fade" id="deleteModal${s._id}" tabindex="-1">
                <div class="modal-dialog modal-dialog-centered">
                  <div class="modal-content">
                    <div class="modal-header bg-danger text-white">
                      <h5 class="modal-title">Confirm Delete</h5>
                      <button class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">Delete <strong>${s.name}</strong>?</div>
                    <div class="modal-footer">
                      <button class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
                      <a href="/saadhak/delete/${s._id}" class="btn btn-danger btn-sm">Yes, Delete</a>
                    </div>
                  </div>
                </div>
              </div>
            </td>
          </tr>
        `;
      });

      // Show/hide columns based on checkboxes
      document.querySelectorAll(".mobile-col").forEach(col => col.style.display = checkboxFields.mobile.checked ? "" : "none");
      document.querySelectorAll(".role-col").forEach(col => col.style.display = checkboxFields.role.checked ? "" : "none");
      document.querySelectorAll(".zila-col").forEach(col => col.style.display = checkboxFields.zila.checked ? "" : "none");
      document.querySelectorAll(".ksheter-col").forEach(col => col.style.display = checkboxFields.ksheter.checked ? "" : "none");
      document.querySelectorAll(".kender-col").forEach(col => col.style.display = checkboxFields.kender.checked ? "" : "none");
    }

    // Live update dropdown changes
    zilaFilter.addEventListener("change", function () {
      populateKsheter(this.value);
      kenderFilter.innerHTML = '<option value="">All Kender</option>';
      renderTable();
    });

    ksheterFilter.addEventListener("change", function () {
      populateKender(this.value);
      renderTable();
    });

    kenderFilter.addEventListener("change", renderTable);
    searchInput.addEventListener("input", renderTable);
    Object.values(checkboxFields).forEach(cb => cb.addEventListener("change", renderTable));

    // Reset
    resetBtn?.addEventListener("click", () => {
      searchInput.value = "";

      if (user.roles.includes("Admin")) {
        zilaFilter.value = "";
        ksheterFilter.innerHTML = '<option value="">All Ksheter</option>';
        kenderFilter.innerHTML = '<option value="">All Kender</option>';
      } else if (user.zila && user.ksheter && user.kender) {
        zilaFilter.value = user.zila;
        populateKsheter(user.zila);
        ksheterFilter.value = user.ksheter;
        populateKender(user.ksheter);
        kenderFilter.value = user.kender;
      } else if (user.zila && user.ksheter) {
        zilaFilter.value = user.zila;
        populateKsheter(user.zila);
        ksheterFilter.value = user.ksheter;
        kenderFilter.innerHTML = '<option value="">All Kender</option>';
      } else if (user.zila) {
        zilaFilter.value = user.zila;
        populateKsheter(user.zila);
        ksheterFilter.value = '';
        kenderFilter.innerHTML = '<option value="">All Kender</option>';
      }

      renderTable();
    });

    renderTable();
  });
</script>


<%- include('../partials/footer') %>
